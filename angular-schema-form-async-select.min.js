!function(t,e){"function"==typeof define&&define.amd?define(["angular-schema-form"],e):"object"==typeof exports?module.exports=e(require("angular-schema-form")):t.angularSchemaFormAsyncSelect=e(t.schemaForm)}(this,function(t){angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button ng-if="(form.options.multiple == \'true\') || (form.options.multiple == true)" type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-index="{{$index}}" data-parent="{{$parent.$index}}" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <button ng-if="!((form.options.multiple == \'true\') || (form.options.multiple == true)) && form.titleMap" type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button><div class="" ng-if="!form.titleMap">Wait for values</div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button ng-if="(form.options.multiple == \'true\') || (form.options.multiple == true)" type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-index="{{$index}}" data-parent="{{$parent.$index}}" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <button ng-if="!((form.options.multiple == \'true\') || (form.options.multiple == true)) && form.titleMap" type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button><div class="" ng-if="!form.titleMap">Wait for values</div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(t,e,a){var o=function(e,o,l){if("string"===o.type&&"enum"in o){var r=t.stdFormObj(e,o,l);return r.key=l.path,r.type="strapselect",l.lookup[a.stringify(l.path)]=r,r}};t.defaults.string.unshift(o),e.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.addMapping("bootstrapDecorator","strapselectasync","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselectasync","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.addMapping("bootstrapDecorator","uiselect","directives/decorators/bootstrap/uiselect/uiselect.html"),e.addMapping("bootstrapDecorator","uiselectmultiple","directives/decorators/bootstrap/uiselect/uiselectmultiple.html")}]).directive("toggleSingleModel",function(){return{require:"ngModel",restrict:"A",scope:{},replace:!0,controller:["$scope",function(t){t.$parent.$watch("select_model.selected",function(){void 0!=t.$parent.select_model.selected&&(t.$parent.insideModel=t.$parent.select_model.selected.value,t.$parent.ngModel.$setViewValue(t.$parent.select_model.selected.value))})}]}}).directive("multipleOn",function(){return{link:function(t,e,a){t.$watch(function(){return e.attr("multiple-on")},function(t){if("true"==t){var a=angular.element(e).scope().$$childTail;a.$isMultiple=!0,a.options.multiple=!0,a.$select.$element.addClass("select-multiple")}else angular.element(e).scope().$$childTail.$isMultiple=!1})}}}).filter("whereMulti",function(){return function(t,e,a){var o=[];return angular.isArray(a)&&void 0!==t?a.forEach(function(a){for(var l=0;l<t.length;l++)if(a==t[l][e]){o.push(t[l]);break}}):o=t,o}}).filter("propsFilter",function(){return function(t,e){var a=[];return angular.isArray(t)?t.forEach(function(t){for(var o=!1,l=Object.keys(e),r=0;r<l.length;r++){var n=l[r];if(t.hasOwnProperty(n)){var i=e[n].toLowerCase();if(0===t[n].toString().toLowerCase().indexOf(i)||-1!==t[n].toString().toLowerCase().indexOf(" "+i)){o=!0;break}}}o&&a.push(t)}):a=t,a}}),angular.module("schemaForm").controller("asyncSelectController",["$scope","$http","$timeout",function(t,e,a){t.form.options||(t.form.options={}),t.select_model={},t.form.options.scope=t,t.triggerTitleMap=function(){t.form.titleMap.push({value:"345890u340598u3405u9",name:"34095u3p4ouij"}),a(function(){t.form.titleMap.pop()})},t.initFiltering=function(e){t.form.options.filterTriggers&&t.form.options.filterTriggers.forEach(function(e){t.$parent.$watch(e,t.triggerTitleMap)}),t.localModelType=Object.prototype.toString.call(e),t.filteringInitialized=!0},t.finalizeTitleMap=function(e,a,o){if(e.titleMap=[],o&&"map"in o&&o.map){var l=o.map.nameProperty.length-1,r=o.map.separatorValue?o.map.separatorValue:" - ";a.forEach(function(t){if(t.value=t[o.map.valueProperty],"string"!=typeof o.map.nameProperty){var a="";for(var n in o.map.nameProperty)a+=t[o.map.nameProperty[n]],n!=l&&(a+=r);t.name=a}else t.name=t[o.map.nameProperty];e.titleMap.push(t)})}else a.forEach(function(t){"text"in t&&(t.name=t.text)}),e.titleMap=a;t.insideModel&&void 0===t.select_model.selected&&(t.select_model.selected=t.find_in_titleMap(t.insideModel)),t.internalModel&&t.uiMultiSelectInitInternalModel(t.externalModel)},t.clone=function(e){if(null==e||"object"!=typeof e)return e;var a=e.constructor();for(var o in e)e[o]!=t&&e.hasOwnProperty(o)&&(a[o]=t.clone(e[o]));return a},t.getCallback=function(e){if("string"==typeof e){var a=t.$parent.evalExpr(e);if("function"==typeof a)return a;throw"A callback string must match name of a function in the parent scope"}if("function"==typeof e)return e;throw"A callback must either be a string matching the name of a function in the parent scope or a direct function reference"},t.getOptions=function(e,a){return e.httpPost&&e.httpPost.optionsCallback?(newOptionInstance=t.clone(e),t.getCallback(e.httpPost.optionsCallback)(newOptionInstance,a)):e.httpGet&&e.httpGet.optionsCallback?(newOptionInstance=t.clone(e),t.getCallback(e.httpGet.optionsCallback)(newOptionInstance,a)):e},t.test=function(t){t.titleMap.pop()},t.populateTitleMap=function(a,o){if(a.schema&&"enum"in a.schema)a.titleMap=[],a.schema["enum"].forEach(function(t){a.titleMap.push({value:t,name:t})});else if(a.options)if(a.options.callback)a.titleMap=t.getCallback(a.options.callback)(a.options,o),t.finalizeTitleMap(a,a.titleMap,a.options);else{if(a.options.asyncCallback)return t.getCallback(a.options.asyncCallback)(a.options,o).then(function(e){t.finalizeTitleMap(a,e.data,a.options)},function(t,e){alert("Loading select items failed(Options: '"+String(a.options)+"\nError: "+e)});if(a.options.httpPost){var l=t.getOptions(a.options,o);return e.post(l.httpPost.url,l.httpPost.parameter).then(function(e){t.finalizeTitleMap(a,e.data,l)},function(t,e){alert("Loading select items failed (URL: '"+String(l.httpPost.url)+"' Parameter: "+String(l.httpPost.parameter)+"\nError: "+e)})}if(a.options.httpGet){var l=t.getOptions(a.options,o);return e.get(l.httpGet.url,l.httpGet.parameter).then(function(e){t.finalizeTitleMap(a,e.data,l)},function(t,e){alert("Loading select items failed (URL: '"+String(l.httpGet.url)+"\nError: "+e)})}}else;},t.find_in_titleMap=function(e){for(i=0;i<t.form.titleMap.length;i++)if(t.form.titleMap[i].value==e)return{value:t.form.titleMap[i].value,name:t.form.titleMap[i].name}},t.uiMultiSelectInitInternalModel=function(e){t.externalModel=e,t.internalModel=[],t.form.titleMap&&void 0!==e&&angular.isArray(e)&&e.forEach(function(e){t.internalModel.push(t.find_in_titleMap(e))})}}]),angular.module("schemaForm").filter("selectFilter",[function(t){return function(t,e,a,o){if(!angular.isDefined(t)||!angular.isDefined(e.form.options)||!angular.isDefined(e.form.options.filter)||""==e.form.options.filter)return t;e.filteringInitialized||e.initFiltering(a);var l=[];return angular.forEach(t,function(t){e.$eval(e.form.options.filter,{item:t})?l.push(t):a&&("[object Array]"==e.localModelType&&a.indexOf(t.value)>-1?a.splice(a.indexOf(t.value),1):a==t.value&&(a=null))}),"[object Array]"!=e.localModelType||a||e.$eval(o+"=[]"),l}}])});