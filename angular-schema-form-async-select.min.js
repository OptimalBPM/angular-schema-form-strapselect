!function(e,t){"function"==typeof define&&define.amd?define(["angular-schema-form"],t):"object"==typeof exports?module.exports=t(require("angular-schema-form")):e.angularSchemaFormAsyncSelect=t(e.schemaForm)}(this,function(e){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/strap/straparray.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ul class="list-group" ng-model="modelArray" ui-sortable="options.sortableOptions"><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" style="position: relative; z-index: 20;" type="button" class="close pull-right clearfix"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button><sf-decorator class="{{$parent.form.decoratorClass}}" ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ul><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),e.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="{{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button ng-if="(form.options.multiple == \'true\') || (form.options.multiple == true)" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-index="{{$index}}" data-parent="{{$parent.$index}}" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <button ng-if="!((form.options.multiple == \'true\') || (form.options.multiple == true)) && form.titleMap" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button><loader class="" ng-if="!form.titleMap"></loader><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/strap/straparray.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ul class="list-group" ng-model="modelArray" ui-sortable="options.sortableOptions"><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" style="position: relative; z-index: 20;" type="button" class="close pull-right clearfix"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button><sf-decorator class="{{$parent.form.decoratorClass}}" ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ul><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),e.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="{{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button ng-if="(form.options.multiple == \'true\') || (form.options.multiple == true)" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-index="{{$index}}" data-parent="{{$parent.$index}}" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <button ng-if="!((form.options.multiple == \'true\') || (form.options.multiple == true)) && form.titleMap" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button><loader class="" ng-if="!form.titleMap"></loader><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,a){var o=function(t,o,r){if("string"===o.type&&"enum"in o){var l=e.stdFormObj(t,o,r);return l.key=r.path,l.type="strapselect",r.lookup[a.stringify(r.path)]=l,l}};e.defaults.string.unshift(o),t.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),t.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),t.addMapping("bootstrapDecorator","array","directives/decorators/bootstrap/strap/straparray.html"),t.addMapping("bootstrapDecorator","strapselectasync","directives/decorators/bootstrap/strap/strapselect.html"),t.addMapping("bootstrapDecorator","strapmultiselectasync","directives/decorators/bootstrap/strap/strapmultiselect.html"),t.addMapping("bootstrapDecorator","uiselect","directives/decorators/bootstrap/uiselect/uiselect.html"),t.addMapping("bootstrapDecorator","uiselectmultiple","directives/decorators/bootstrap/uiselect/uiselectmultiple.html")}]).directive("toggleSingleModel",function(){return{require:"ngModel",restrict:"A",scope:{},replace:!0,controller:["$scope",function(e){e.$parent.$watch("select_model.selected",function(){void 0!=e.$parent.select_model.selected&&(e.$parent.insideModel=e.$parent.select_model.selected.value,e.$parent.ngModel.$setViewValue(e.$parent.select_model.selected.value))})}]}}).directive("multipleOn",function(){return{link:function(e,t,a){e.$watch(function(){return t.attr("multiple-on")},function(e){if("true"==e){var a=angular.element(t).scope().$$childTail;a.$isMultiple=!0,a.options.multiple=!0,a.$select.$element.addClass("select-multiple")}else angular.element(t).scope().$$childTail.$isMultiple=!1})}}}).filter("whereMulti",function(){return function(e,t,a){var o=[];return angular.isArray(a)&&void 0!==e?a.forEach(function(a){for(var r=0;r<e.length;r++)if(a==e[r][t]){o.push(e[r]);break}}):o=e,o}}).filter("propsFilter",function(){return function(e,t){var a=[];return angular.isArray(e)?e.forEach(function(e){for(var o=!1,r=Object.keys(t),l=0;l<r.length;l++){var s=r[l];if(e.hasOwnProperty(s)){var n=t[s].toLowerCase();if(0===e[s].toString().toLowerCase().indexOf(n)||-1!==e[s].toString().toLowerCase().indexOf(" "+n)){o=!0;break}}}o&&a.push(e)}):a=e,a}}),angular.module("schemaForm").controller("asyncSelectController",["$scope","$http","$timeout",function(e,t,a){e.form.options||(e.form.options={}),e.select_model={},e.form.options.scope=e,e.triggerTitleMap=function(){e.form.titleMap.push({value:"345890u340598u3405u9",name:"34095u3p4ouij"}),a(function(){e.form.titleMap.pop()})},e.initFiltering=function(t){e.form.options.filterTriggers&&e.form.options.filterTriggers.forEach(function(t){e.$parent.$watch(t,e.triggerTitleMap)}),e.localModelType=Object.prototype.toString.call(t),e.filteringInitialized=!0},e.finalizeTitleMap=function(t,a,o){if(t.titleMap=[],o&&"map"in o&&o.map){var r=o.map.nameProperty.length-1,l=o.map.separatorValue?o.map.separatorValue:" - ";a.forEach(function(e){if(e.value=e[o.map.valueProperty],"string"!=typeof o.map.nameProperty){var a="";for(var s in o.map.nameProperty)a+=e[o.map.nameProperty[s]],s!=r&&(a+=l);e.name=a}else e.name=e[o.map.nameProperty];t.titleMap.push(e)})}else a.forEach(function(e){"text"in e&&(e.name=e.text)}),t.titleMap=a;e.insideModel&&void 0===e.select_model.selected&&(e.select_model.selected=e.find_in_titleMap(e.insideModel)),e.internalModel&&e.uiMultiSelectInitInternalModel(e.externalModel)},e.clone=function(t){if(null==t||"object"!=typeof t)return t;var a=t.constructor();for(var o in t)t[o]!=e&&t.hasOwnProperty(o)&&(a[o]=e.clone(t[o]));return a},e.getCallback=function(t){if("string"==typeof t){var a=e.$parent.evalExpr(t);if("function"==typeof a)return a;throw"A callback string must match name of a function in the parent scope"}if("function"==typeof t)return t;throw"A callback must either be a string matching the name of a function in the parent scope or a direct function reference"},e.getOptions=function(t,a){return t.httpPost&&t.httpPost.optionsCallback?(newOptionInstance=e.clone(t),e.getCallback(t.httpPost.optionsCallback)(newOptionInstance,a)):t.httpGet&&t.httpGet.optionsCallback?(newOptionInstance=e.clone(t),e.getCallback(t.httpGet.optionsCallback)(newOptionInstance,a)):t},e.test=function(e){e.titleMap.pop()},e.populateTitleMap=function(a,o){if(a.schema&&"enum"in a.schema)a.titleMap=[],a.schema["enum"].forEach(function(e){a.titleMap.push({value:e,name:e})});else if(a.options)if(a.options.callback)a.titleMap=e.getCallback(a.options.callback)(a.options,o),e.finalizeTitleMap(a,a.titleMap,a.options);else{if(a.options.asyncCallback)return e.getCallback(a.options.asyncCallback)(a.options,o).then(function(t){e.finalizeTitleMap(a,t.data,a.options)},function(e,t){alert("Loading select items failed(Options: '"+String(a.options)+"\nError: "+t)});if(a.options.httpPost){var r=e.getOptions(a.options,o);return t.post(r.httpPost.url,r.httpPost.parameter).then(function(t){e.finalizeTitleMap(a,t.data,r)},function(e,t){alert("Loading select items failed (URL: '"+String(r.httpPost.url)+"' Parameter: "+String(r.httpPost.parameter)+"\nError: "+t)})}if(a.options.httpGet){var r=e.getOptions(a.options,o);return t.get(r.httpGet.url,r.httpGet.parameter).then(function(t){e.finalizeTitleMap(a,t.data,r)},function(e,t){alert("Loading select items failed (URL: '"+String(r.httpGet.url)+"\nError: "+t)})}}else;},e.find_in_titleMap=function(t){for(i=0;i<e.form.titleMap.length;i++)if(e.form.titleMap[i].value==t)return{value:e.form.titleMap[i].value,name:e.form.titleMap[i].name}},e.uiMultiSelectInitInternalModel=function(t){e.externalModel=t,e.internalModel=[],e.form.titleMap&&void 0!==t&&angular.isArray(t)&&t.forEach(function(t){e.internalModel.push(e.find_in_titleMap(t))})}}]),angular.module("schemaForm").filter("selectFilter",[function(e){return function(e,t,a,o){if(!angular.isDefined(e)||!angular.isDefined(t.form.options)||!angular.isDefined(t.form.options.filter)||""==t.form.options.filter)return e;t.filteringInitialized||t.initFiltering(a);var r=[];return angular.forEach(e,function(e){t.$eval(t.form.options.filter,{item:e})?r.push(e):a&&("[object Array]"==t.localModelType&&a.indexOf(e.value)>-1?a.splice(a.indexOf(e.value),1):a==e.value&&(a=null))}),"[object Array]"!=t.localModelType||a||t.$eval(o+"=[]"),r}}])});