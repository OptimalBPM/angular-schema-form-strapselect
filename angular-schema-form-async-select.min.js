!function(e,t){"function"==typeof define&&define.amd?define(["angular-schema-form"],t):"object"==typeof exports?module.exports=t(require("angular-schema-form")):e.angularSchemaFormAsyncSelect=t(e.schemaForm)}(this,function(e){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/strap/straparray.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ul class="list-group" ng-model="modelArray" ui-sortable="options.sortableOptions"><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><div class="action-buttons pull-right"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index);form.onRemove && form.onRemove()" style="position: relative; z-index: 20;" type="button" class="close pull-right"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button> <button ng-hide="!form.onClone" ng-click="form.onClone(item)" style="position: relative; z-index: 20;" class="clone pull-right" title="Clone element"><i class="fa fa-clone"></i></button></div><sf-decorator class="{{$parent.form.decoratorClass}}" ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ul><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="fa fa-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),e.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="{{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button ng-if="(form.options.multiple == \'true\') || (form.options.multiple == true)" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-index="{{$index}}" data-parent="{{$parent.$index}}" data-placeholder="{{form.noResPlaceholder || form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <button ng-if="!((form.options.multiple == \'true\') || (form.options.multiple == true))" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" ng-disabled="!form.titleMap.length" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button><md-progress-linear md-mode="indeterminate" style="height:3px;overflow:hidden" ng-if="form.loading"></md-progress-linear><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/strap/straparray.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ul class="list-group" ng-model="modelArray" ui-sortable="options.sortableOptions"><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><div class="action-buttons pull-right"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index);form.onRemove && form.onRemove()" style="position: relative; z-index: 20;" type="button" class="close pull-right"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button> <button ng-hide="!form.onClone" ng-click="form.onClone(item)" style="position: relative; z-index: 20;" class="clone pull-right" title="Clone element"><i class="fa fa-clone"></i></button></div><sf-decorator class="{{$parent.form.decoratorClass}}" ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ul><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="fa fa-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button type="button" class="btn btn-default" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),e.put("directives/decorators/bootstrap/strap/strapselect.html",'<div ng-controller="asyncSelectController" class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="{{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-init="populateTitleMap(form)"><button ng-if="(form.options.multiple == \'true\') || (form.options.multiple == true)" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-index="{{$index}}" data-parent="{{$parent.$index}}" data-placeholder="{{form.noResPlaceholder || form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" data-multiple="1" data-max-length="{{form.options.inlineMaxLength}}" data-max-length-html="{{form.options.inlineMaxLengthHtml}}" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button> <button ng-if="!((form.options.multiple == \'true\') || (form.options.multiple == true))" type="button" class="grey lighten-5 black-text btn-sm btn" sf-changed="form" schema-validate="form" ng-model="$$value$$" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-html="1" ng-disabled="!form.titleMap.length" bs-options="item.value as item.name for item in form.titleMap | selectFilter:this:$$value$$:&quot;$$value$$&quot;" bs-select=""></button><md-progress-linear md-mode="indeterminate" style="height:3px;overflow:hidden" ng-if="form.loading"></md-progress-linear><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,o){var a=function(t,a,l){if("string"===a.type&&"enum"in a){var r=e.stdFormObj(t,a,l);return r.key=l.path,r.type="strapselect",l.lookup[o.stringify(l.path)]=r,r}};e.defaults.string.unshift(a),t.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),t.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),t.addMapping("bootstrapDecorator","array","directives/decorators/bootstrap/strap/straparray.html"),t.addMapping("bootstrapDecorator","strapselectasync","directives/decorators/bootstrap/strap/strapselect.html"),t.addMapping("bootstrapDecorator","strapmultiselectasync","directives/decorators/bootstrap/strap/strapmultiselect.html"),t.addMapping("bootstrapDecorator","uiselect","directives/decorators/bootstrap/uiselect/uiselect.html"),t.addMapping("bootstrapDecorator","uiselectmultiple","directives/decorators/bootstrap/uiselect/uiselectmultiple.html")}]).directive("toggleSingleModel",function(){return{require:"ngModel",restrict:"A",scope:{},replace:!0,controller:["$scope",function(e){e.$parent.$watch("select_model.selected",function(){void 0!=e.$parent.select_model.selected&&(e.$parent.insideModel=e.$parent.select_model.selected.value,e.$parent.ngModel.$setViewValue(e.$parent.select_model.selected.value))})}]}}).directive("multipleOn",function(){return{link:function(e,t,o){e.$watch(function(){return t.attr("multiple-on")},function(e){if("true"==e){var o=angular.element(t).scope().$$childTail;o.$isMultiple=!0,o.options.multiple=!0,o.$select.$element.addClass("select-multiple")}else angular.element(t).scope().$$childTail.$isMultiple=!1})}}}).filter("whereMulti",function(){return function(e,t,o){var a=[];return angular.isArray(o)&&void 0!==e?o.forEach(function(o){for(var l=0;l<e.length;l++)if(o==e[l][t]){a.push(e[l]);break}}):a=e,a}}).filter("propsFilter",function(){return function(e,t){var o=[];return angular.isArray(e)?e.forEach(function(e){for(var a=!1,l=Object.keys(t),r=0;r<l.length;r++){var n=l[r];if(e.hasOwnProperty(n)){var s=t[n].toLowerCase();if(0===e[n].toString().toLowerCase().indexOf(s)||-1!==e[n].toString().toLowerCase().indexOf(" "+s)){a=!0;break}}}a&&o.push(e)}):o=e,o}}),angular.module("schemaForm").controller("asyncSelectController",["$scope","$http","$timeout",function(e,t,o){e.form.options||(e.form.options={}),e.select_model={},e.form.options.scope=e,e.triggerTitleMap=function(){e.form.titleMap.push({value:"345890u340598u3405u9",name:"34095u3p4ouij"}),o(function(){e.form.titleMap.pop()})},e.$on("refreshSelect",function(){e.populateTitleMap(e.form)}),e.initFiltering=function(t){e.form.options.filterTriggers&&e.form.options.filterTriggers.forEach(function(t){e.$parent.$watch(t,e.triggerTitleMap)}),e.localModelType=Object.prototype.toString.call(t),e.filteringInitialized=!0},e.finalizeTitleMap=function(t,o,a){if(e.form.loading=!1,t.titleMap=[],a&&"map"in a&&a.map){var l=a.map.nameProperty.length-1,r=a.map.separatorValue?a.map.separatorValue:" - ";o.forEach(function(e){if(e.value=e[a.map.valueProperty],"string"!=typeof a.map.nameProperty){var o="";for(var n in a.map.nameProperty)o+=e[a.map.nameProperty[n]],n!=l&&(o+=r);e.name=o}else e.name=e[a.map.nameProperty];t.titleMap.push(e)})}else o.forEach(function(e){"text"in e&&(e.name=e.text)}),t.titleMap=o;e.insideModel&&void 0===e.select_model.selected&&(e.select_model.selected=e.find_in_titleMap(e.insideModel)),e.internalModel&&e.uiMultiSelectInitInternalModel(e.externalModel)},e.clone=function(t){if(null==t||"object"!=typeof t)return t;var o=t.constructor();for(var a in t)t[a]!=e&&t.hasOwnProperty(a)&&(o[a]=e.clone(t[a]));return o},e.getCallback=function(t){if("string"==typeof t){var o=e.$parent.evalExpr(t);if("function"==typeof o)return o;throw"A callback string must match name of a function in the parent scope"}if("function"==typeof t)return t;throw"A callback must either be a string matching the name of a function in the parent scope or a direct function reference"},e.getOptions=function(t,o){return t.httpPost&&t.httpPost.optionsCallback?(newOptionInstance=e.clone(t),e.getCallback(t.httpPost.optionsCallback)(newOptionInstance,o)):t.httpGet&&t.httpGet.optionsCallback?(newOptionInstance=e.clone(t),e.getCallback(t.httpGet.optionsCallback)(newOptionInstance,o)):t},e.test=function(e){e.titleMap.pop()},e.populateTitleMap=function(o,a){if(o.loading=!0,o.schema&&"enum"in o.schema)o.titleMap=[],o.schema["enum"].forEach(function(e){o.titleMap.push({value:e,name:e})}),o.loading=!1;else if(o.options)if(o.options.callback)o.titleMap=e.getCallback(o.options.callback)(o.options,a),e.finalizeTitleMap(o,o.titleMap,o.options);else{if(o.options.asyncCallback)return e.getCallback(o.options.asyncCallback)(o.options,a).then(function(t){e.finalizeTitleMap(o,t.data,o.options)},function(e,t){console.log("Loading select items failed(Options: '"+String(o.options)+"\nError: "+t),o.loading=!1});if(o.options.httpPost){var l=e.getOptions(o.options,a);return t.post(l.httpPost.url,l.httpPost.parameter).then(function(t){e.finalizeTitleMap(o,t.data,l)},function(e,t){console.log("Loading select items failed (URL: '"+String(l.httpPost.url)+"' Parameter: "+String(l.httpPost.parameter)+"\nError: "+t),o.loading=!1})}if(o.options.httpGet){var l=e.getOptions(o.options,a);return t.get(l.httpGet.url,l.httpGet.parameter).then(function(t){e.finalizeTitleMap(o,t.data,l)},function(e,t){console.log("Loading select items failed (URL: '"+String(l.httpGet.url)+"\nError: "+t),o.loading=!1})}o.loading=!1}else;},e.find_in_titleMap=function(t){for(form.loading=!1,i=0;i<e.form.titleMap.length;i++)if(e.form.titleMap[i].value==t)return{value:e.form.titleMap[i].value,name:e.form.titleMap[i].name}},e.uiMultiSelectInitInternalModel=function(t){e.externalModel=t,e.internalModel=[],e.form.titleMap&&void 0!==t&&angular.isArray(t)&&t.forEach(function(t){e.internalModel.push(e.find_in_titleMap(t))})}}]),angular.module("schemaForm").filter("selectFilter",[function(e){return function(e,t,o,a){if(!angular.isDefined(e)||!angular.isDefined(t.form.options)||!angular.isDefined(t.form.options.filter)||""==t.form.options.filter)return e;t.filteringInitialized||t.initFiltering(o);var l=[];return angular.forEach(e,function(e){t.$eval(t.form.options.filter,{item:e})?l.push(e):o&&("[object Array]"==t.localModelType&&o.indexOf(e.value)>-1?o.splice(o.indexOf(e.value),1):o==e.value&&(o=null))}),"[object Array]"!=t.localModelType||o||t.$eval(a+"=[]"),l}}])});